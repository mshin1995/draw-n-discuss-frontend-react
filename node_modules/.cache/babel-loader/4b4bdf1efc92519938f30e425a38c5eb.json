{"ast":null,"code":"var _jsxFileName = \"/Users/isalevine/flatiron/module-4-project/frontend-react/src/components/Chatroom.js\";\nimport React, { Component } from 'react';\nimport { HEADERS, API_ROOT } from '../constants';\nimport MessageList from './MessageList';\nimport MessageForm from './MessageForm';\nimport { ActionCable } from 'react-actioncable-provider';\n\nclass Chatroom extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      this.fetchMessages();\n    };\n\n    this.fetchMessages = () => {\n      fetch(\"\".concat(API_ROOT, \"/messages\")).then(resp => resp.json()).then(data => this.setState({\n        messages: data\n      }));\n    };\n\n    this.state = {\n      messages: []\n    };\n    this.addNewMessage = this.addNewMessage.bind(this);\n    this.handleReceivedMessages = this.handleReceivedMessages.bind(this);\n  }\n\n  async addNewMessage(message) {\n    fetch(\"\".concat(API_ROOT, \"/messages\"), {\n      method: 'POST',\n      headers: HEADERS,\n      body: JSON.stringify({\n        'text': message.text,\n        'user_id': sessionStorage.getItem('id')\n      })\n    });\n    await this.fetchMessages();\n  }\n\n  async handleReceivedMessages(message) {\n    this.props.fetchUsers();\n    await this.fetchMessages();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"chatroom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(ActionCable, {\n      channel: {\n        channel: 'MessageChannel'\n      },\n      onReceived: this.handleReceivedMessages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"New Message:\", React.createElement(MessageForm, {\n      addNewMessage: this.addNewMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), \"(Scroll down to see new messages!)\"), React.createElement(MessageList, {\n      messages: this.state.messages,\n      users: this.props.users,\n      fetchUsers: this.props.fetchUsers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Chatroom;","map":{"version":3,"sources":["/Users/isalevine/flatiron/module-4-project/frontend-react/src/components/Chatroom.js"],"names":["React","Component","HEADERS","API_ROOT","MessageList","MessageForm","ActionCable","Chatroom","constructor","componentDidMount","fetchMessages","fetch","then","resp","json","data","setState","messages","state","addNewMessage","bind","handleReceivedMessages","message","method","headers","body","JSON","stringify","text","sessionStorage","getItem","props","fetchUsers","render","channel","users"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,EAAiBC,QAAjB,QAAgC,cAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,WAAR,QAA0B,4BAA1B;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAC/BO,EAAAA,WAAW,GAAE;AACX;;AADW,SASbC,iBATa,GASO,MAAM;AACxB,WAAKC,aAAL;AACD,KAXY;;AAAA,SAabA,aAba,GAaG,MAAM;AACpBC,MAAAA,KAAK,WAAIR,QAAJ,eAAL,CACGS,IADH,CACQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADhB,EAEGF,IAFH,CAEQG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAC1BC,QAAAA,QAAQ,EAAEF;AADgB,OAAd,CAFhB;AAKD,KAnBY;;AAEX,SAAKG,KAAL,GAAa;AACXD,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGA,SAAKE,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BD,IAA5B,CAAiC,IAAjC,CAA9B;AACD;;AAcD,QAAMD,aAAN,CAAoBG,OAApB,EAA6B;AAC3BX,IAAAA,KAAK,WAAIR,QAAJ,gBAAyB;AAC5BoB,MAAAA,MAAM,EAAE,MADoB;AAE5BC,MAAAA,OAAO,EAAEtB,OAFmB;AAG5BuB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnB,gBAAQL,OAAO,CAACM,IADG;AAEnB,mBAAWC,cAAc,CAACC,OAAf,CAAuB,IAAvB;AAFQ,OAAf;AAHsB,KAAzB,CAAL;AAQA,UAAM,KAAKpB,aAAL,EAAN;AACD;;AAED,QAAMW,sBAAN,CAA6BC,OAA7B,EAAsC;AACpC,SAAKS,KAAL,CAAWC,UAAX;AACA,UAAM,KAAKtB,aAAL,EAAN;AACD;;AAEDuB,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AACE,MAAA,OAAO,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV,OADX;AAEE,MAAA,UAAU,EAAE,KAAKb,sBAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACE,oBAAC,WAAD;AACE,MAAA,aAAa,EAAE,KAAKF,aADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,uCALA,EAUE,oBAAC,WAAD;AACE,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWD,QADvB;AAEE,MAAA,KAAK,EAAE,KAAKc,KAAL,CAAWI,KAFpB;AAGE,MAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWC,UAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADF;AAmBD;;AA3D8B;;AA+DjC,eAAezB,QAAf","sourcesContent":["import React, {Component} from 'react'\nimport {HEADERS, API_ROOT} from '../constants';\nimport MessageList from './MessageList'\nimport MessageForm from './MessageForm'\nimport {ActionCable} from 'react-actioncable-provider';\n\nclass Chatroom extends Component {\n  constructor(){\n    super()\n    this.state = {\n      messages: []\n    }\n    this.addNewMessage = this.addNewMessage.bind(this)\n    this.handleReceivedMessages = this.handleReceivedMessages.bind(this)\n  }\n\n  componentDidMount = () => {\n    this.fetchMessages()\n  }\n\n  fetchMessages = () => {\n    fetch(`${API_ROOT}/messages`)\n      .then(resp => resp.json())\n      .then(data => this.setState({\n        messages: data\n      }))\n  }\n\n  async addNewMessage(message) {\n    fetch(`${API_ROOT}/messages`, {\n      method: 'POST',\n      headers: HEADERS,\n      body: JSON.stringify({\n        'text': message.text,\n        'user_id': sessionStorage.getItem('id')\n      })\n    })\n    await this.fetchMessages()\n  }\n\n  async handleReceivedMessages(message) {\n    this.props.fetchUsers()\n    await this.fetchMessages()\n  }\n\n  render() {\n    return (\n      <div id=\"chatroom\">\n        <ActionCable\n          channel={{channel: 'MessageChannel'}}\n          onReceived={this.handleReceivedMessages}\n        />\n      <strong>New Message:\n        <MessageForm\n          addNewMessage={this.addNewMessage}\n        />\n      (Scroll down to see new messages!)</strong>\n        <MessageList\n          messages={this.state.messages}\n          users={this.props.users}\n          fetchUsers={this.props.fetchUsers}\n        />\n\n      </div>\n    )\n  }\n\n}\n\nexport default Chatroom\n"]},"metadata":{},"sourceType":"module"}