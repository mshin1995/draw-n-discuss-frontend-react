{"ast":null,"code":"var _jsxFileName = \"/Users/isalevine/flatiron/module-4-project/frontend-react/src/components/GalleryCard.js\";\nimport React, { Component } from 'react'; // props: drawing\n\nclass GalleryCard extends Component {\n  constructor() {\n    super();\n\n    this.draw = () => {\n      // this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n      this.paths.forEach(path => {\n        this.ctx.lineWidth = path.strokeWidth;\n        this.ctx.strokeStyle = path.color;\n        this.ctx.beginPath();\n        const list = path.list;\n        this.ctx.moveTo(list[0], list[1]);\n\n        for (let i = 2; i < list.length; i += 2) {\n          this.ctx.lineTo(list[i], list[i + 1]);\n        }\n\n        this.ctx.stroke();\n      });\n    };\n\n    this.ctx = null;\n    this.paths = this.props.drawing;\n    this.id = this.props.drawing.id;\n  }\n\n  componentDidMount() {\n    let canvas = document.getElementsByClassName(\"card-canvas-\".concat(this.id))[0];\n    const ctx = canvas.getContext('2d');\n    this.ctx = ctx; // this.rect = canvas.getBoundingClientRect()\n    // this.canvas = canvas\n\n    this.draw();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      className: \"card-canvas-\".concat(this.id),\n      width: \"500\",\n      height: \"500\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default GalleryCard;","map":{"version":3,"sources":["/Users/isalevine/flatiron/module-4-project/frontend-react/src/components/GalleryCard.js"],"names":["React","Component","GalleryCard","constructor","draw","paths","forEach","path","ctx","lineWidth","strokeWidth","strokeStyle","color","beginPath","list","moveTo","i","length","lineTo","stroke","props","drawing","id","componentDidMount","canvas","document","getElementsByClassName","getContext","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CAGA;;AAEA,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AAElCE,EAAAA,WAAW,GAAI;AACb;;AADa,SAiBfC,IAjBe,GAiBR,MAAM;AACX;AACA,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAI,IAAI;AACzB,aAAKC,GAAL,CAASC,SAAT,GAAqBF,IAAI,CAACG,WAA1B;AACA,aAAKF,GAAL,CAASG,WAAT,GAAuBJ,IAAI,CAACK,KAA5B;AACA,aAAKJ,GAAL,CAASK,SAAT;AACA,cAAMC,IAAI,GAAGP,IAAI,CAACO,IAAlB;AACA,aAAKN,GAAL,CAASO,MAAT,CAAgBD,IAAI,CAAC,CAAD,CAApB,EAAyBA,IAAI,CAAC,CAAD,CAA7B;;AACA,aAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,IAAI,CAAtC,EAAyC;AACvC,eAAKR,GAAL,CAASU,MAAT,CAAgBJ,IAAI,CAACE,CAAD,CAApB,EAAyBF,IAAI,CAACE,CAAC,GAAG,CAAL,CAA7B;AACD;;AACD,aAAKR,GAAL,CAASW,MAAT;AACD,OAVD;AAWD,KA9Bc;;AAEb,SAAKX,GAAL,GAAW,IAAX;AACA,SAAKH,KAAL,GAAa,KAAKe,KAAL,CAAWC,OAAxB;AACA,SAAKC,EAAL,GAAU,KAAKF,KAAL,CAAWC,OAAX,CAAmBC,EAA7B;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,MAAM,GAAGC,QAAQ,CAACC,sBAAT,uBAA+C,KAAKJ,EAApD,GAA0D,CAA1D,CAAb;AACA,UAAMd,GAAG,GAAGgB,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAZ;AACA,SAAKnB,GAAL,GAAWA,GAAX,CAHkB,CAIlB;AACA;;AAEA,SAAKJ,IAAL;AACD;;AAiBDwB,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,wBAAiB,KAAKN,EAAtB,CADX;AAEE,MAAA,KAAK,EAAC,KAFR;AAGE,MAAA,MAAM,EAAC,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AASD;;AA5CiC;;AAgDpC,eAAepB,WAAf","sourcesContent":["import React, {Component} from 'react'\n\n\n// props: drawing\n\nclass GalleryCard extends Component {\n\n  constructor () {\n    super ()\n    this.ctx = null\n    this.paths = this.props.drawing\n    this.id = this.props.drawing.id\n  }\n\n  componentDidMount() {\n    let canvas = document.getElementsByClassName(`card-canvas-${this.id}`)[0];\n    const ctx = canvas.getContext('2d')\n    this.ctx = ctx\n    // this.rect = canvas.getBoundingClientRect()\n    // this.canvas = canvas\n\n    this.draw()\n  }\n\n  draw = () => {\n    // this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n    this.paths.forEach(path => {\n      this.ctx.lineWidth = path.strokeWidth;\n      this.ctx.strokeStyle = path.color;\n      this.ctx.beginPath();\n      const list = path.list;\n      this.ctx.moveTo(list[0], list[1]);\n      for (let i = 2; i < list.length; i += 2) {\n        this.ctx.lineTo(list[i], list[i + 1]);\n      }\n      this.ctx.stroke();\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"card\">\n        <canvas\n          className={`card-canvas-${this.id}`}\n          width=\"500\"\n          height=\"500\"\n        />\n      </div>\n    )\n  }\n\n}\n\nexport default GalleryCard\n"]},"metadata":{},"sourceType":"module"}