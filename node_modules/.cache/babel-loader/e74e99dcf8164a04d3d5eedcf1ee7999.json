{"ast":null,"code":"var _jsxFileName = \"/Users/isalevine/flatiron/module-4-project/frontend-react/src/components/Chatroom.js\";\nimport React, { Component } from 'react';\nimport { HEADERS, API_ROOT } from '../constants';\nimport MessageList from './MessageList';\nimport MessageForm from './MessageForm';\n\nclass Chatroom extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      fetch(\"\".concat(API_ROOT, \"/messages\")).then(resp => resp.json()).then(data => this.setState({\n        messages: data\n      }));\n      fetch(\"\".concat(API_ROOT, \"/users\")).then(resp => resp.json()).then(data => {\n        console.log(\"fetch users data: \", data);\n      });\n    };\n\n    this.addNewMessage = message => {\n      this.setState({\n        messages: [...this.state.messages, message]\n      });\n      fetch(\"\".concat(API_ROOT, \"/messages\"), {\n        method: 'POST',\n        headers: HEADERS,\n        body: JSON.stringify({\n          'text': message.text,\n          'user_id': sessionStorage.getItem('id')\n        })\n      });\n    };\n\n    this.state = {\n      messages: []\n    };\n    this.users = {};\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"chatroom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(MessageList, {\n      messages: this.state.messages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(MessageForm, {\n      addNewMessage: this.addNewMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Chatroom;","map":{"version":3,"sources":["/Users/isalevine/flatiron/module-4-project/frontend-react/src/components/Chatroom.js"],"names":["React","Component","HEADERS","API_ROOT","MessageList","MessageForm","Chatroom","constructor","componentDidMount","fetch","then","resp","json","data","setState","messages","console","log","addNewMessage","message","state","method","headers","body","JSON","stringify","text","sessionStorage","getItem","users","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,EAAiBC,QAAjB,QAAgC,cAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAC/BM,EAAAA,WAAW,GAAE;AACX;;AADW,SAQbC,iBARa,GAQO,MAAM;AACxBC,MAAAA,KAAK,WAAIN,QAAJ,eAAL,CACGO,IADH,CACQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADhB,EAEGF,IAFH,CAEQG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAC1BC,QAAAA,QAAQ,EAAEF;AADgB,OAAd,CAFhB;AAMAJ,MAAAA,KAAK,WAAIN,QAAJ,YAAL,CACCO,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEMG,IAAI,IAAI;AACZG,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCJ,IAAlC;AACD,OAJD;AAKD,KApBY;;AAAA,SAsBbK,aAtBa,GAsBIC,OAAD,IAAa;AAC3B,WAAKL,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAAE,CAAC,GAAG,KAAKK,KAAL,CAAWL,QAAf,EAAyBI,OAAzB;AADE,OAAd;AAGAV,MAAAA,KAAK,WAAIN,QAAJ,gBAAyB;AAC5BkB,QAAAA,MAAM,EAAE,MADoB;AAE5BC,QAAAA,OAAO,EAAEpB,OAFmB;AAG5BqB,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnB,kBAAQN,OAAO,CAACO,IADG;AAEnB,qBAAWC,cAAc,CAACC,OAAf,CAAuB,IAAvB;AAFQ,SAAf;AAHsB,OAAzB,CAAL;AAQD,KAlCY;;AAEX,SAAKR,KAAL,GAAa;AACXL,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGA,SAAKc,KAAL,GAAa,EAAb;AACD;;AA8BDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWL,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,WAAD;AAAa,MAAA,aAAa,EAAE,KAAKG,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AA5C8B;;AAgDjC,eAAeZ,QAAf","sourcesContent":["import React, {Component} from 'react'\nimport {HEADERS, API_ROOT} from '../constants';\nimport MessageList from './MessageList'\nimport MessageForm from './MessageForm'\n\nclass Chatroom extends Component {\n  constructor(){\n    super()\n    this.state = {\n      messages: []\n    }\n    this.users = {}\n  }\n\n  componentDidMount = () => {\n    fetch(`${API_ROOT}/messages`)\n      .then(resp => resp.json())\n      .then(data => this.setState({\n        messages: data\n      }))\n\n    fetch(`${API_ROOT}/users`)\n    .then(resp => resp.json())\n    .then(data => {\n      console.log(\"fetch users data: \", data)\n    })\n  }\n\n  addNewMessage = (message) => {\n    this.setState({\n      messages: [...this.state.messages, message ]\n    })\n    fetch(`${API_ROOT}/messages`, {\n      method: 'POST',\n      headers: HEADERS,\n      body: JSON.stringify({\n        'text': message.text,\n        'user_id': sessionStorage.getItem('id')\n      })\n    })\n  }\n\n  render() {\n    return (\n      <div id=\"chatroom\">\n        <MessageList messages={this.state.messages} />\n        <MessageForm addNewMessage={this.addNewMessage} />\n      </div>\n    )\n  }\n\n}\n\nexport default Chatroom\n"]},"metadata":{},"sourceType":"module"}