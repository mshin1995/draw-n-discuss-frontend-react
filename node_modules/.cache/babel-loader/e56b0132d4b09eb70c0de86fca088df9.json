{"ast":null,"code":"var _jsxFileName = \"/Users/isalevine/flatiron/module-4-project/frontend-react/src/components/Chatroom.js\";\nimport React, { Component } from 'react';\nimport { HEADERS, API_ROOT } from '../constants';\nimport MessageList from './MessageList';\nimport MessageForm from './MessageForm';\nimport { ActionCable } from 'react-actioncable-provider';\n\nclass Chatroom extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      fetch(\"\".concat(API_ROOT, \"/messages\")).then(resp => resp.json()).then(data => this.setState({\n        messages: data\n      }));\n    };\n\n    this.addNewMessage = message => {\n      // this.setState({\n      //   messages: [...this.state.messages, message]\n      // })\n      fetch(\"\".concat(API_ROOT, \"/messages\"), {\n        method: 'POST',\n        headers: HEADERS,\n        body: JSON.stringify({\n          'text': message.text,\n          'user_id': localStorage.getItem('id')\n        })\n      });\n    };\n\n    this.handleReceivedMessages = message => {\n      this.setState({\n        messages: [...this.state.messages, message]\n      });\n    };\n\n    this.state = {\n      messages: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"chatroom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(ActionCable, {\n      channel: {\n        channel: 'MessageChannel'\n      },\n      onReceived: this.handleReceivedMessages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(MessageList, {\n      messages: this.state.messages,\n      users: this.props.users,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(MessageForm, {\n      addNewMessage: this.addNewMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Chatroom;","map":{"version":3,"sources":["/Users/isalevine/flatiron/module-4-project/frontend-react/src/components/Chatroom.js"],"names":["React","Component","HEADERS","API_ROOT","MessageList","MessageForm","ActionCable","Chatroom","constructor","componentDidMount","fetch","then","resp","json","data","setState","messages","addNewMessage","message","method","headers","body","JSON","stringify","text","localStorage","getItem","handleReceivedMessages","state","render","channel","props","users"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,EAAiBC,QAAjB,QAAgC,cAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,WAAR,QAA0B,4BAA1B;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAC/BO,EAAAA,WAAW,GAAE;AACX;;AADW,SAObC,iBAPa,GAOO,MAAM;AACxBC,MAAAA,KAAK,WAAIP,QAAJ,eAAL,CACGQ,IADH,CACQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADhB,EAEGF,IAFH,CAEQG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAC1BC,QAAAA,QAAQ,EAAEF;AADgB,OAAd,CAFhB;AAKD,KAbY;;AAAA,SAebG,aAfa,GAeIC,OAAD,IAAa;AAC3B;AACA;AACA;AACAR,MAAAA,KAAK,WAAIP,QAAJ,gBAAyB;AAC5BgB,QAAAA,MAAM,EAAE,MADoB;AAE5BC,QAAAA,OAAO,EAAElB,OAFmB;AAG5BmB,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnB,kBAAQL,OAAO,CAACM,IADG;AAEnB,qBAAWC,YAAY,CAACC,OAAb,CAAqB,IAArB;AAFQ,SAAf;AAHsB,OAAzB,CAAL;AAQD,KA3BY;;AAAA,SA6BbC,sBA7Ba,GA6BaT,OAAD,IAAa;AACpC,WAAKH,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAAE,CAAC,GAAG,KAAKY,KAAL,CAAWZ,QAAf,EAAyBE,OAAzB;AADE,OAAd;AAGD,KAjCY;;AAEX,SAAKU,KAAL,GAAa;AACXZ,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AA8BDa,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AACE,MAAA,OAAO,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV,OADX;AAEE,MAAA,UAAU,EAAE,KAAKH,sBAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE,oBAAC,WAAD;AACE,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWZ,QADvB;AAEE,MAAA,KAAK,EAAE,KAAKe,KAAL,CAAWC,KAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EASE,oBAAC,WAAD;AACE,MAAA,aAAa,EAAE,KAAKf,aADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF;AAeD;;AApD8B;;AAwDjC,eAAeV,QAAf","sourcesContent":["import React, {Component} from 'react'\nimport {HEADERS, API_ROOT} from '../constants';\nimport MessageList from './MessageList'\nimport MessageForm from './MessageForm'\nimport {ActionCable} from 'react-actioncable-provider';\n\nclass Chatroom extends Component {\n  constructor(){\n    super()\n    this.state = {\n      messages: []\n    }\n  }\n\n  componentDidMount = () => {\n    fetch(`${API_ROOT}/messages`)\n      .then(resp => resp.json())\n      .then(data => this.setState({\n        messages: data\n      }))\n  }\n\n  addNewMessage = (message) => {\n    // this.setState({\n    //   messages: [...this.state.messages, message]\n    // })\n    fetch(`${API_ROOT}/messages`, {\n      method: 'POST',\n      headers: HEADERS,\n      body: JSON.stringify({\n        'text': message.text,\n        'user_id': localStorage.getItem('id')\n      })\n    })\n  }\n\n  handleReceivedMessages = (message) => {\n    this.setState({\n      messages: [...this.state.messages, message]\n    })\n  }\n\n  render() {\n    return (\n      <div id=\"chatroom\">\n        <ActionCable\n          channel={{channel: 'MessageChannel'}}\n          onReceived={this.handleReceivedMessages}\n        />\n        <MessageList\n          messages={this.state.messages}\n          users={this.props.users}\n        />\n        <MessageForm\n          addNewMessage={this.addNewMessage}\n        />\n      </div>\n    )\n  }\n\n}\n\nexport default Chatroom\n"]},"metadata":{},"sourceType":"module"}